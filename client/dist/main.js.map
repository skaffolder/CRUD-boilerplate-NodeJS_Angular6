{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/navbar.component.html","webpack:///./src/app/components/navbar.component.ts","webpack:///./src/app/directives/mail.validate.directive.ts","webpack:///./src/app/domain/manage_film_example_db/actor.ts","webpack:///./src/app/domain/manage_film_example_db/base/actor.base.ts","webpack:///./src/app/domain/manage_film_example_db/base/film-maker.base.ts","webpack:///./src/app/domain/manage_film_example_db/base/film.base.ts","webpack:///./src/app/domain/manage_film_example_db/base/user.base.ts","webpack:///./src/app/domain/manage_film_example_db/film-maker.ts","webpack:///./src/app/domain/manage_film_example_db/film.ts","webpack:///./src/app/domain/manage_film_example_db/user.ts","webpack:///./src/app/pages/actor-edit/actor-edit.component.css","webpack:///./src/app/pages/actor-edit/actor-edit.component.html","webpack:///./src/app/pages/actor-edit/actor-edit.component.ts","webpack:///./src/app/pages/actor-list/actor-list.component.css","webpack:///./src/app/pages/actor-list/actor-list.component.html","webpack:///./src/app/pages/actor-list/actor-list.component.ts","webpack:///./src/app/pages/film-edit/film-edit.component.css","webpack:///./src/app/pages/film-edit/film-edit.component.html","webpack:///./src/app/pages/film-edit/film-edit.component.ts","webpack:///./src/app/pages/film-list/film-list.component.css","webpack:///./src/app/pages/film-list/film-list.component.html","webpack:///./src/app/pages/film-list/film-list.component.ts","webpack:///./src/app/pages/film-maker-edit/film-maker-edit.component.css","webpack:///./src/app/pages/film-maker-edit/film-maker-edit.component.html","webpack:///./src/app/pages/film-maker-edit/film-maker-edit.component.ts","webpack:///./src/app/pages/film-maker-list/film-maker-list.component.css","webpack:///./src/app/pages/film-maker-list/film-maker-list.component.html","webpack:///./src/app/pages/film-maker-list/film-maker-list.component.ts","webpack:///./src/app/pages/home/home.component.css","webpack:///./src/app/pages/home/home.component.html","webpack:///./src/app/pages/home/home.component.ts","webpack:///./src/app/pages/login/login.component.css","webpack:///./src/app/pages/login/login.component.html","webpack:///./src/app/pages/login/login.component.ts","webpack:///./src/app/pipes/search.pipe.ts","webpack:///./src/app/security/auth.guard.ts","webpack:///./src/app/security/auth.interceptor.ts","webpack:///./src/app/security/authentication.service.ts","webpack:///./src/app/security/current-user.ts","webpack:///./src/app/security/manage-user/edit-user/manage-user-edit.component.html","webpack:///./src/app/security/manage-user/edit-user/manage-user-edit.component.ts","webpack:///./src/app/security/manage-user/list-user/manage-user-list.component.html","webpack:///./src/app/security/manage-user/list-user/manage-user-list.component.ts","webpack:///./src/app/security/profile/profile.component.html","webpack:///./src/app/security/profile/profile.component.ts","webpack:///./src/app/security/services/security.service.ts","webpack:///./src/app/services/actor.service.ts","webpack:///./src/app/services/base/actor.base.service.ts","webpack:///./src/app/services/base/film-maker.base.service.ts","webpack:///./src/app/services/base/film.base.service.ts","webpack:///./src/app/services/base/user.base.service.ts","webpack:///./src/app/services/film-maker.service.ts","webpack:///./src/app/services/film.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","// DEPENDENCIES\nimport { NgModule } from '@angular/core';\nimport { CanActivate, RouterModule, Routes } from '@angular/router';\n\n/* START MY VIEWS IMPORT */\n// Do not edit this comment content, it will be overwritten in next Skaffolder generation\r\nimport { HomeComponent} from './pages/home/home.component';\r\nimport { ActorEditComponent} from './pages/actor-edit/actor-edit.component';\r\nimport { ActorListComponent} from './pages/actor-list/actor-list.component';\r\nimport { FilmEditComponent} from './pages/film-edit/film-edit.component';\r\nimport { FilmListComponent} from './pages/film-list/film-list.component';\r\nimport { FilmMakerEditComponent} from './pages/film-maker-edit/film-maker-edit.component';\r\nimport { FilmMakerListComponent} from './pages/film-maker-list/film-maker-list.component';\r\n\n/* END MY VIEWS IMPORT */\n\n// SECURITY\nimport { LoginComponent } from './pages/login/login.component';\nimport { ManageUserEditComponent } from './security/manage-user/edit-user/manage-user-edit.component';\nimport { ManageUserListComponent } from './security/manage-user/list-user/manage-user-list.component';\nimport { ProfileComponent } from './security/profile/profile.component';\nimport { AuthGuard } from './security/auth.guard';\n\n/**\n * WEB APP ROUTES\n */\nconst routes: Routes = [\n    { path: '', redirectTo: '/home', pathMatch: 'full'  },\n\n    /* START MY VIEWS */\n\r\n    { path: 'actors/:id',  component: ActorEditComponent , canActivate: [AuthGuard] },\r\n    { path: 'actors',  component: ActorListComponent , canActivate: [AuthGuard] },\r\n    { path: 'films/:id',  component: FilmEditComponent , canActivate: [AuthGuard] },\r\n    { path: 'films',  component: FilmListComponent , canActivate: [AuthGuard] },\r\n    { path: 'filmmakers/:id',  component: FilmMakerEditComponent , canActivate: [AuthGuard] },\r\n    { path: 'filmmakers',  component: FilmMakerListComponent , canActivate: [AuthGuard] },\r\n    { path: 'home',  component: HomeComponent , canActivate: [AuthGuard] },\r\n\r\n /* END MY VIEWS */\n\n    { path: 'home', component: HomeComponent},\n    // SECURITY\n    { path: 'manage-users',  component: ManageUserListComponent, canActivate: [AuthGuard], data: ['ADMIN']},\n    { path: 'manage-users/:id',  component: ManageUserEditComponent, canActivate: [AuthGuard], data: ['ADMIN']},\n    { path: 'profile',  component: ProfileComponent, canActivate: [AuthGuard] },\n    { path: 'login', component: LoginComponent}\n];\n\n/**\n * ROUTING MODULE\n */\n@NgModule({\n    imports: [ RouterModule.forRoot(routes) ],\n    exports: [ RouterModule ]\n})\n\nexport class AppRoutingModule {}\n","module.exports = \"<!-- NAVBAR -->\\n<app-navbar></app-navbar>\\n\\n<!-- CONTENT -->\\n<div class=\\\"container-fluid mb-40\\\">\\n    <div class=\\\"row justify-content-md-center\\\">\\n        <div class=\\\"col-md-7\\\">\\n            <router-outlet></router-outlet>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"clearfix\\\"></div>\\n\\n<!-- FOOTER -->\\n<div class=\\\"footer\\\">\\n    Created by\\n    <a href=\\\"https://www.skaffolder.com\\\" target=\\\"_blank\\\">&copy; Skaffolder</a>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-managefilmexample',\n    templateUrl: './app.component.html',\n})\n/**\n * THIS COMPONENT CONTAINS THE TEMPLATE OF WEB SITE\n */\nexport class AppComponent {\n\n}\n","// DEPENDENCIES\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\n// SECURITY\nimport { SecurityService } from './security/services/security.service';\nimport { AuthenticationService } from './security/authentication.service';\nimport { AuthGuard } from './security/auth.guard';\nimport { AuthInterceptor } from './security/auth.interceptor';\n\n// SECURITY VIEWS\nimport { ManageUserListComponent } from './security/manage-user/list-user/manage-user-list.component';\nimport { ManageUserEditComponent } from './security/manage-user/edit-user/manage-user-edit.component';\nimport { ProfileComponent } from './security/profile/profile.component';\nimport { LoginComponent } from './pages/login/login.component';\n\n/* START MY VIEWS IMPORTS*/\n// Do not edit this comment content, it will be overwritten in next Skaffolder generation\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { ActorEditComponent } from './pages/actor-edit/actor-edit.component';\r\nimport { ActorListComponent } from './pages/actor-list/actor-list.component';\r\nimport { FilmEditComponent } from './pages/film-edit/film-edit.component';\r\nimport { FilmListComponent } from './pages/film-list/film-list.component';\r\nimport { FilmMakerEditComponent } from './pages/film-maker-edit/film-maker-edit.component';\r\nimport { FilmMakerListComponent } from './pages/film-maker-list/film-maker-list.component';\r\n\n/* END MY VIEWS IMPORTS*/\n\n/* START MY SERVICES IMPORTS*/\n// Do not edit this comment content, it will be overwritten in next Skaffolder generation\r\nimport { ActorService } from './services/actor.service';\r\nimport { FilmService } from './services/film.service';\r\nimport { FilmMakerService } from './services/film-maker.service';\r\nimport { UserService } from './services/user.service';\r\n\n/* END MY SERVICES IMPORTS*/\n\n// LAYOUT\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar.component';\nimport { SearchPipe } from './pipes/search.pipe';\n\n// DIRECTIVES\nimport { MailValidator } from './directives/mail.validate.directive';\n\n// DECLARE APPLICATION MODULE\n@NgModule({\n  bootstrap: [\n    AppComponent\n  ],\n  imports: [\n    AppRoutingModule, // ROUTES\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  declarations: [\n    // LAYOUT\n    AppComponent,\n    NavbarComponent,\n    MailValidator,\n\n     // SECURITY\n    LoginComponent,\n    ProfileComponent,\n    ManageUserListComponent,\n    ManageUserEditComponent,\n\n    /* START DECLARATIONS */\n// Do not edit this comment content, it will be overwritten in next Skaffolder generation\n    HomeComponent,\n    ActorEditComponent,\n    ActorListComponent,\n    FilmEditComponent,\n    FilmListComponent,\n    FilmMakerEditComponent,\n    FilmMakerListComponent,\n /* END DECLARATIONS */\n\n    // PIPE\n    SearchPipe\n  ],\n  providers:    [\n    /* START PROVIDERS */\n// Do not edit this comment content, it will be overwritten in next Skaffolder generation\r\n    ActorService,\r\n    FilmService,\r\n    FilmMakerService,\r\n    UserService,\r\n /* END PROVIDERS */\n\n    // SECURITY\n    AuthGuard,\n    AuthenticationService,\n    SecurityService,\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\n  ],\n})\nexport class AppModule { }\n","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary\\\">\\n    <a class=\\\"navbar-brand\\\" routerLink=\\\"\\\">ManageFilmExample</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div *ngIf=\\\"user\\\" class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n                <a class=\\\"nav-link\\\" routerLink=\\\"/home\\\">Home </a>\\n            </li>\\n            <!-- START LINK MENU -->\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n               <a class=\\\"nav-link\\\" routerLink=\\\"/actors\\\">Actor</a>\\n            </li>\\n        \\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n               <a class=\\\"nav-link\\\" routerLink=\\\"/films\\\">Film</a>\\n            </li>\\n        \\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n               <a class=\\\"nav-link\\\" routerLink=\\\"/filmmakers\\\">FilmMaker</a>\\n            </li>\\n        \\n <!-- END LINK MENU -->\\n        </ul>\\n    </div>\\n    <div *ngIf=\\\"user\\\" class=\\\"navbar-collapse collapse w-100 order-3 dual-collapse2\\\">\\n        <ul class=\\\"navbar-nav ml-auto\\\">\\n            <li class=\\\"nav-item dropdown\\\">\\n                <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n                    Benvenuto {{user.username}}\\n                </a>\\n                <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n                    <a class=\\\"dropdown-item\\\" routerLink=\\\"/manage-users\\\">Manage User</a>\\n                    <a class=\\\"dropdown-item\\\" routerLink=\\\"/profile\\\">Profile</a>\\n                    <div class=\\\"dropdown-divider\\\"></div>\\n                    <a class=\\\"dropdown-item\\\" (click)=\\\"authenticationService.logout()\\\">Logout</a>\\n                </div>\\n            </li>\\n        </ul>\\n\\n    </div>\\n</nav>\"","import { Component } from '@angular/core';\nimport { store } from 'src/app/security/current-user';\nimport { OnInit } from '@angular/core';\nimport { User } from 'src/app/domain/manage_film_example_db/user';\nimport { AuthenticationService } from 'src/app/security/authentication.service';\n\n/**\n * This component manage the NavBar\n *\n * @class NavbarComponent\n */\n@Component({\n    selector: 'app-navbar',\n    templateUrl: './navbar.component.html',\n})\nexport class NavbarComponent implements OnInit {\n\n    private user: User;\n    constructor(private authenticationService: AuthenticationService) { }\n\n    ngOnInit() {\n        this.authenticationService.getUser().subscribe(user => this.user = user, err => this.user = null);\n        store.currentUser$.subscribe(user => this.user = user);\n    }\n}\n","import { Directive, forwardRef, Attribute } from '@angular/core';\nimport { Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\nimport { ElementRef } from '@angular/core';\nimport { Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[isMail]',\n  providers: [{ provide: NG_VALIDATORS, useExisting: MailValidator, multi: true }]\n})\nexport class MailValidator implements Validator {\n  constructor(private elRef: ElementRef, private renderer: Renderer2) { }\n  validate(control: AbstractControl): { [key: string]: any } {\n    // self value (e.g. retype password)\n    const mail = control.value;\n\n    const regExpMail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (!mail) return null;\n\n    if (!regExpMail.test(mail)) {\n      this.renderer.addClass(this.elRef.nativeElement, 'is-invalid');\n      return {\n        validateEqual: false\n      };\n    } else {\n      this.renderer.removeClass(this.elRef.nativeElement, 'is-invalid');\n    }\n    return null;\n  }\n}\n","import { ActorBase } from './base/actor.base';\n\n/**\n * YOU CAN OVERRIDE HERE ActorBase.ts\n */\nexport class Actor extends ActorBase {\n\n    // Insert here your custom attributes and function\n}\n","/**\n *\n *\n  _____                      _              _ _ _     _   _     _        __ _ _\n |  __ \\                    | |            | (_) |   | | | |   (_)      / _(_) |\n | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___\n | |  | |/ _ \\  | '_ \\ / _ \\| __|  / _ \\/ _` | | __| | __| '_ \\| / __| |  _| | |/ _ \\\n | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \\__ \\ | | | | |  __/\n |_____/ \\___/  |_| |_|\\___/ \\__|  \\___|\\__,_|_|\\__|  \\__|_| |_|_|___/ |_| |_|_|\\___|\n\n\n * DO NOT EDIT THIS FILE!!\n *\n *  TO CUSTOMIZE ActorBase PLEASE EDIT ../actor.ts\n *\n *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER'S CODE GENERATION --\n *\n */\n\n/**\n * This is the model of Actor object\n *\n */\nexport class ActorBase {\n\n    constructor() { }\n\n    public _id: string;\n    public birthDate?: Date;\n    public name: string;\n    public surname?: string;\n}\n","/**\n *\n *\n  _____                      _              _ _ _     _   _     _        __ _ _\n |  __ \\                    | |            | (_) |   | | | |   (_)      / _(_) |\n | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___\n | |  | |/ _ \\  | '_ \\ / _ \\| __|  / _ \\/ _` | | __| | __| '_ \\| / __| |  _| | |/ _ \\\n | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \\__ \\ | | | | |  __/\n |_____/ \\___/  |_| |_|\\___/ \\__|  \\___|\\__,_|_|\\__|  \\__|_| |_|_|___/ |_| |_|_|\\___|\n\n\n * DO NOT EDIT THIS FILE!!\n *\n *  TO CUSTOMIZE ActorBase PLEASE EDIT ../film-maker.ts\n *\n *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER'S CODE GENERATION --\n *\n */\n\n/**\n * This is the model of FilmMaker object\n *\n */\nexport class FilmMakerBase {\n\n    constructor() { }\n\n    public _id: string;\n    public name: string;\n    public surname?: string;\n}\n","/**\n *\n *\n  _____                      _              _ _ _     _   _     _        __ _ _\n |  __ \\                    | |            | (_) |   | | | |   (_)      / _(_) |\n | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___\n | |  | |/ _ \\  | '_ \\ / _ \\| __|  / _ \\/ _` | | __| | __| '_ \\| / __| |  _| | |/ _ \\\n | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \\__ \\ | | | | |  __/\n |_____/ \\___/  |_| |_|\\___/ \\__|  \\___|\\__,_|_|\\__|  \\__|_| |_|_|___/ |_| |_|_|\\___|\n\n\n * DO NOT EDIT THIS FILE!!\n *\n *  TO CUSTOMIZE ActorBase PLEASE EDIT ../film.ts\n *\n *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER'S CODE GENERATION --\n *\n */\nimport { FilmMaker } from '../film-maker';\n\n/**\n * This is the model of Film object\n *\n */\nexport class FilmBase {\n\n    constructor() { }\n\n    public _id: string;\n    public genre?: string;\n    public title: string;\n    public year?: number;\n    // Relations filmMaker\n    public filmMaker: FilmMaker | string;\n    // Relations m:m cast\n    public cast: string[];\n}\n","/**\n *\n *\n  _____                      _              _ _ _     _   _     _        __ _ _\n |  __ \\                    | |            | (_) |   | | | |   (_)      / _(_) |\n | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___\n | |  | |/ _ \\  | '_ \\ / _ \\| __|  / _ \\/ _` | | __| | __| '_ \\| / __| |  _| | |/ _ \\\n | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \\__ \\ | | | | |  __/\n |_____/ \\___/  |_| |_|\\___/ \\__|  \\___|\\__,_|_|\\__|  \\__|_| |_|_|___/ |_| |_|_|\\___|\n\n\n * DO NOT EDIT THIS FILE!!\n *\n *  TO CUSTOMIZE ActorBase PLEASE EDIT ../user.ts\n *\n *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER'S CODE GENERATION --\n *\n */\n\n/**\n * This is the model of User object\n *\n */\nexport class UserBase {\n\n    constructor() { }\n\n    public _id: string;\n    public mail?: string;\n    public name?: string;\n    public password: string;\n    public roles?: string[];\n    public surname?: string;\n    public username: string;\n}\n","import { FilmMakerBase } from './base/film-maker.base';\n\n/**\n * YOU CAN OVERRIDE HERE FilmMakerBase.ts\n */\nexport class FilmMaker extends FilmMakerBase {\n\n    // Insert here your custom attributes and function\n}\n","import { FilmBase } from './base/film.base';\n\n/**\n * YOU CAN OVERRIDE HERE FilmBase.ts\n */\nexport class Film extends FilmBase {\n\n    // Insert here your custom attributes and function\n}\n","import { UserBase } from './base/user.base';\n\n/**\n * YOU CAN OVERRIDE HERE UserBase.ts\n */\nexport class User extends UserBase {\n\n    // Insert here your custom attributes and function\n\n    // Functions for User\n\n    public token: string;\n\n    constructor(\n        _id?: string,\n        username?: string,\n        token?: string,\n        roles?: string[]\n    ) {\n        super();\n        this._id = _id;\n        this.username = username;\n        this.token = token;\n        this.roles = roles;\n    }\n\n    // UTILS FUNCTIONS\n\n    /**\n     * Check if logged user is admin\n     */\n    isAdmin(): boolean {\n        if (!this.roles)\n            return false;\n        return this.roles.indexOf('ADMIN') === 0;\n    }\n\n    /**\n     * Check if logged user has one role\n     */\n    hasRole(role: string | Array<string>): boolean {\n        if (!this.roles) return false;\n\n        if (typeof role === 'string') {\n            return (this.roles.indexOf(role) !== -1);\n        } else {\n            const found = role.filter(rol => {\n                return (this.roles.indexOf(rol) !== -1);\n            });\n            return found.length > 0;\n        }\n    }\n}\n","module.exports = \"/* Insert here your CSS */\"","module.exports = \"<!-- TITLE -->\\n<div class=\\\"mb-40 mt-40\\\">\\n    <h1>Actor Edit</h1>\\n</div>\\n<div class=\\\"card mb-40\\\">\\n    <div class=\\\"card-header\\\">\\n        <i class=\\\"fa fa-edit\\\"></i> Edit\\n    </div>\\n    <div class=\\\"card-body\\\">\\n        <form #editForm=\\\"ngForm\\\" [ngClass]=\\\"{'was-validated': formValid!=null}\\\">\\n            <div class=\\\"row justify-content-md-center\\\">\\n                <div class=\\\"col-md-10\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"birthDate\\\">BirthDate</label>\\n                        <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"birthDate\\\" [(ngModel)]=\\\"item.birthDate\\\" name=\\\"birthDate\\\" #birthDate=\\\"ngModel\\\" >\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"name\\\">Name *</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" [(ngModel)]=\\\"item.name\\\" name=\\\"name\\\" #name=\\\"ngModel\\\" required>\\n                        <div class=\\\"invalid-feedback\\\">Value is required</div>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"surname\\\">Surname</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"surname\\\" [(ngModel)]=\\\"item.surname\\\" name=\\\"surname\\\" #surname=\\\"ngModel\\\" >\\n                    </div>\\n                    <!-- RELATIONS -->\\n                    \\n\\n\\n                    <!-- BUTTON BAR -->\\n                    <div class=\\\"mt-40\\\">\\n                        <button class=\\\"btn btn-primary pull-right\\\" (click)=\\\"save(editForm.valid, item)\\\">Save</button>\\n                        <button class=\\\"btn btn-secondary pull-right mr-2\\\" (click)=\\\"goBack()\\\">Back To List</button>\\n                    </div>\\n                </div>\\n            </div>\\n        </form>\\n    </div>\\n</div>\"","// Import Libraries\nimport { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\n// Import Services\nimport { ActorService } from '../../services/actor.service';\nimport { FilmService } from '../../services/film.service';\n// Import Models\nimport { Actor } from '../../domain/manage_film_example_db/actor';\nimport { Film } from '../../domain/manage_film_example_db/film';\n\n// START - USED SERVICES\n/**\n* ActorService.create\n*\t@description CRUD ACTION create\n*\n* FilmService.findBycast\n*\t@description CRUD ACTION findBycast\n*\n* ActorService.get\n*\t@description CRUD ACTION get\n*\t@param ObjectId id Id \n*\n* ActorService.update\n*\t@description CRUD ACTION update\n*\t@param ObjectId id Id\n*\n*/\n// END - USED SERVICES\n\n/**\n * This component allows to edit a Actor\n */\n@Component({\n    selector: 'app-actor-edit',\n    templateUrl: 'actor-edit.component.html',\n    styleUrls: ['actor-edit.component.css']\n})\nexport class ActorEditComponent implements OnInit {\n    item: Actor;\n    listCast: Actor[];\n    externalFilm: Film[];\n    model: Actor;\n    formValid: Boolean;\n\n    constructor(\n    private actorService: ActorService,\n    private filmService: FilmService,\n    private route: ActivatedRoute,\n    private location: Location) {\n        // Init item\n        this.item = new Actor();\n        this.externalFilm = [];\n    }\n\n    /**\n     * Init\n     */\n    ngOnInit() {\n        this.route.params.subscribe(param => {\n            const id: string = param['id'];\n            if (id !== 'new') {\n                this.actorService.get(id).subscribe(item => this.item = item);\n                this.filmService.findByCast(id).subscribe(list => this.externalFilm = list);\n            }\n            // Get relations\n        });\n    }\n\n\n    /**\n     * Save Actor\n     *\n     * @param {boolean} formValid Form validity check\n     * @param Actor item Actor to save\n     */\n    save(formValid: boolean, item: Actor): void {\n        this.formValid = formValid;\n        if (formValid) {\n            if (item._id) {\n                this.actorService.update(item).subscribe(data => this.goBack());\n            } else {\n                this.actorService.create(item).subscribe(data => this.goBack());\n            } \n        }\n    }\n\n    /**\n     * Go Back\n     */\n    goBack(): void {\n        this.location.back();\n    }\n\n\n}\n\n\n\n","module.exports = \"/* Insert here your CSS */\"","module.exports = \"<!-- TITLE -->\\n<div class=\\\"mb-40 mt-40\\\">\\n    <h1>Actor List</h1>\\n</div>\\n\\n<!-- SEARCH FORM -->\\n<div class=\\\"card\\\">\\n\\n    <div class=\\\"card-header\\\">\\n        <i class=\\\"fa fa-search\\\"></i> Search\\n    </div>\\n    <div class=\\\"card-body\\\">\\n        <form #searchForm=\\\"ngForm\\\">\\n            <div class=\\\"row justify-content-md-center\\\">\\n                <div class=\\\"col-md-10\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"birthDate\\\">BirthDate</label>\\n                        <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"birthDate\\\" [(ngModel)]=\\\"search.birthDate\\\" name=\\\"birthDate\\\" #birthDate=\\\"ngModel\\\">\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"name\\\">Name</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" [(ngModel)]=\\\"search.name\\\" name=\\\"name\\\" #name=\\\"ngModel\\\">\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"surname\\\">Surname</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"surname\\\" [(ngModel)]=\\\"search.surname\\\" name=\\\"surname\\\" #surname=\\\"ngModel\\\">\\n                    </div>\\n                </div>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n\\n<!-- TABLE -->\\n<table class=\\\"table mt-40\\\">\\n    <thead>\\n        <tr>\\n            <th scope=\\\"col\\\">ID</th>\\n            <th scope=\\\"col\\\">birthDate</th>\\n            <th scope=\\\"col\\\">name</th>\\n            <th scope=\\\"col\\\">surname</th>\\n            <th>Remove</th>\\n        </tr>\\n    </thead>\\n    <tbody>\\n        <tr *ngFor=\\\"let item of list | search: { 'birthDate': search.birthDate, 'name': search.name, 'surname': search.surname }\\\">\\n            <!-- ATTRIBUTES -->\\n            <td>\\n                <a [routerLink]=\\\"['/actors', item._id]\\\">{{item._id}}</a>\\n            </td>\\n            <td>{{item.birthDate | date }}</td>\\n            <td>{{item.name }}</td>\\n            <td>{{item.surname }}</td>\\n\\n            <!-- DELETE BUTTON -->\\n            <td>\\n                <button class=\\\"btn btn-danger text-center\\\" data-toggle=\\\"modal\\\" data-target=\\\"#deleteModal\\\" (click)=\\\"selectId(item._id)\\\">\\n                    <span>\\n                        <i class=\\\"fa fa-trash\\\"></i>\\n                    </span>\\n                </button>\\n            </td>\\n        </tr>\\n    </tbody>\\n    <div class=\\\"no-result\\\" *ngIf=\\\"(list | search: {   'birthDate': search.birthDate ,  'name': search.name ,  'surname': search.surname  }).length == 0\\\">\\n        No items found\\n    </div>\\n</table>\\n\\n<!-- Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"deleteModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"deleteModalLabel\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">\\n                    <i class=\\\"fa fa-times-circle\\\"></i>&nbsp;&nbsp;Delete</h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                Do you want remove item?\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">NO</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"deleteItem()\\\">YES</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<!-- BUTTON -->\\n<button class=\\\"btn btn-primary text-center pull-right mb-20\\\" routerLink=\\\"/actors/new\\\">\\n    <span>\\n        <i class=\\\"fa fa-plus\\\"></i>\\n    </span>\\n</button>\\n\\n<div class=\\\"clearfix\\\"></div>\"","import { Component } from '@angular/core';\nimport { OnInit } from '@angular/core';\n// Import Services\nimport { ActorService } from '../../services/actor.service';\n// Import Models\nimport { Actor } from '../../domain/manage_film_example_db/actor';\n\n// START - USED SERVICES\n/**\n* ActorService.delete\n*\t@description CRUD ACTION delete\n*\t@param ObjectId id Id\n*\n* ActorService.list\n*\t@description CRUD ACTION list\n*\n*/\n// END - USED SERVICES\n\n/**\n * This component shows a list of Actor\n * @class ActorListComponent\n */\n@Component({\n    selector: 'app-actor-list',\n    templateUrl: './actor-list.component.html',\n    styleUrls: ['./actor-list.component.css']\n})\nexport class ActorListComponent implements OnInit {\n    list: Actor[];\n    search: any = {};\n    idSelected: string;\n    constructor(\n        private actorService: ActorService,\n    ) { }\n\n    /**\n     * Init\n     */\n    ngOnInit(): void {\n        this.actorService.list().subscribe(list => this.list = list);\n    }\n\n    /**\n     * Select Actor to remove\n     *\n     * @param {string} id Id of the Actor to remove\n     */\n    selectId(id: string) {\n        this.idSelected = id;\n    }\n\n    /**\n     * Remove selected Actor\n     */\n    deleteItem() {\n        this.actorService.remove(this.idSelected).subscribe(data => this.list = this.list.filter(el => el._id !== this.idSelected));\n    }\n\n}\n","module.exports = \"/* Insert here your CSS */\"","module.exports = \"<!-- TITLE -->\\n<div class=\\\"mb-40 mt-40\\\">\\n    <h1>Film Edit</h1>\\n</div>\\n<div class=\\\"card mb-40\\\">\\n    <div class=\\\"card-header\\\">\\n        <i class=\\\"fa fa-edit\\\"></i> Edit\\n    </div>\\n    <div class=\\\"card-body\\\">\\n        <form #editForm=\\\"ngForm\\\" [ngClass]=\\\"{'was-validated': formValid!=null}\\\">\\n            <div class=\\\"row justify-content-md-center\\\">\\n                <div class=\\\"col-md-10\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"genre\\\">Genre</label>\\n                        <select name=\\\"genre\\\" id=\\\"genre\\\" [(ngModel)]=\\\"item.genre\\\" class=\\\"form-control\\\" #genre=\\\"ngModel\\\" >\\n                            <option value=\\\"\\\"></option>\\n                            <option value=\\\"Action\\\">Action</option>\\n                            <option value=\\\"Crime\\\">Crime</option>\\n                            <option value=\\\"Fantasy\\\">Fantasy</option>\\n                            <option value=\\\"Horror\\\">Horror</option>\\n                        </select>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"title\\\">Title *</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"title\\\" [(ngModel)]=\\\"item.title\\\" name=\\\"title\\\" #title=\\\"ngModel\\\" required>\\n                        <div class=\\\"invalid-feedback\\\">Value is required</div>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"year\\\">Year</label>\\n                        <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"year\\\" [(ngModel)]=\\\"item.year\\\" name=\\\"year\\\" #year=\\\"ngModel\\\" >\\n                    </div>\\n                    <!-- RELATIONS -->\\n                    <h2 class=\\\"mb-20\\\">Relations</h2>\\n\\n                    <div class=\\\"pb-30\\\">\\n                        <div class=\\\"mb-20\\\">\\n                            <label>Cast</label>\\n\\n                            <span class=\\\"dropdown ml-20\\\">\\n                                <button class=\\\"btn btn-dropdown dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenuButtoncast\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\"\\n                                    aria-expanded=\\\"false\\\">\\n                                    Add\\n                                </button>\\n                                <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButtoncast\\\">\\n                                    <button class=\\\"dropdown-item\\\" *ngFor=\\\"let item of listCast\\\" [class.disabled]=\\\"containActor(item._id)\\\" (click)=\\\"$event.preventDefault(); containActor(item._id) || addActor(item._id)\\\">{{item._id}}\\n                                    </button>\\n                                </div>\\n                            </span>\\n                        </div>\\n                        <div class=\\\"mb-40\\\">\\n                            <ul class=\\\"list-group\\\">\\n                                <li class=\\\"list-group-item\\\" *ngIf=\\\"!item.cast || item.cast.length == 0\\\">No item found</li>\\n                                <li class=\\\"list-group-item\\\" *ngFor=\\\"let obj of item.cast; let i = index\\\">\\n                                    {{obj}}\\n\\n                                    <button class=\\\"btn btn-danger pull-right\\\" type=\\\"button\\\" (click)=\\\"removeActor(i)\\\">\\n                                        <i class=\\\"fa fa-trash\\\"></i>\\n                                    </button>\\n                                </li>\\n                            </ul>\\n                        </div>\\n                    </div>\\n                    <label for=\\\"FilmMaker\\\">FilmMaker</label>\\n                    <select name=\\\"filmMaker\\\" id=\\\"filmMaker\\\" [(ngModel)]=\\\"item.filmMaker\\\" class=\\\"form-control\\\" #filmMaker=\\\"ngModel\\\"  required>\\n                        <option *ngFor=\\\"let item of listFilmMaker\\\" value=\\\"{{item._id}}\\\">{{item._id}}</option>\\n                    </select>\\n                        <div class=\\\"invalid-feedback\\\">Value is required</div>\\n\\n                    <!-- BUTTON BAR -->\\n                    <div class=\\\"mt-40\\\">\\n                        <button class=\\\"btn btn-primary pull-right\\\" (click)=\\\"save(editForm.valid, item)\\\">Save</button>\\n                        <button class=\\\"btn btn-secondary pull-right mr-2\\\" (click)=\\\"goBack()\\\">Back To List</button>\\n                    </div>\\n                </div>\\n            </div>\\n        </form>\\n    </div>\\n</div>\"","// Import Libraries\nimport { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\n// Import Services\nimport { FilmService } from '../../services/film.service';\nimport { ActorService } from '../../services/actor.service';\nimport { FilmMakerService } from '../../services/film-maker.service';\n// Import Models\nimport { Film } from '../../domain/manage_film_example_db/film';\nimport { Actor } from '../../domain/manage_film_example_db/actor';\nimport { FilmMaker } from '../../domain/manage_film_example_db/film-maker';\n\n// START - USED SERVICES\n/**\n* FilmService.create\n*\t@description CRUD ACTION create\n*\n* FilmService.get\n*\t@description CRUD ACTION get\n*\n* ActorService.list\n*\t@description CRUD ACTION list\n*\n* FilmMakerService.list\n*\t@description CRUD ACTION list\n*\n* FilmService.update\n*\t@description CRUD ACTION update\n*\n*/\n// END - USED SERVICES\n\n/**\n * This component allows to edit a Film\n */\n@Component({\n    selector: 'app-film-edit',\n    templateUrl: 'film-edit.component.html',\n    styleUrls: ['film-edit.component.css']\n})\nexport class FilmEditComponent implements OnInit {\n    item: Film;\n    listCast: Actor[];\n    listFilmMaker: FilmMaker[];\n    model: Film;\n    formValid: Boolean;\n\n    constructor(\n    private filmService: FilmService,\n    private actorService: ActorService,\n    private filmmakerService: FilmMakerService,\n    private route: ActivatedRoute,\n    private location: Location) {\n        // Init item\n        this.item = new Film();\n    }\n\n    /**\n     * Init\n     */\n    ngOnInit() {\n        this.route.params.subscribe(param => {\n            const id: string = param['id'];\n            if (id !== 'new') {\n                this.filmService.get(id).subscribe(item => this.item = item);\n            }\n            // Get relations\n            this.actorService.list().subscribe(list => this.listCast = list);\n            this.filmmakerService.list().subscribe(list => this.listFilmMaker = list);\n        });\n    }\n\n    /**\n     * Check if an Actor is in  cast\n     *\n     * @param {string} id Id of Actor to search\n     * @returns {boolean} True if it is found\n     */\n    containActor(id: string): boolean {\n        if (!this.item.cast) return false;\n        return this.item.cast.indexOf(id) !== -1;\n    }\n\n    /**\n     * Add Actor from Film\n     *\n     * @param {string} id Id of Actor to add in this.item.cast array\n     */\n    addActor(id: string) {\n        if (!this.item.cast)\n            this.item.cast = [];\n        this.item.cast.push(id);\n    }\n\n    /**\n     * Remove an Actor from a Film\n     *\n     * @param {number} index Index of Actor in this.item.cast array\n     */\n    removeActor(index: number) {\n        this.item.cast.splice(index, 1);\n    }\n\n    /**\n     * Save Film\n     *\n     * @param {boolean} formValid Form validity check\n     * @param Film item Film to save\n     */\n    save(formValid: boolean, item: Film): void {\n        this.formValid = formValid;\n        if (formValid) {\n            if (item._id) {\n                this.filmService.update(item).subscribe(data => this.goBack());\n            } else {\n                this.filmService.create(item).subscribe(data => this.goBack());\n            } \n        }\n    }\n\n    /**\n     * Go Back\n     */\n    goBack(): void {\n        this.location.back();\n    }\n\n\n}\n\n\n\n","module.exports = \"/* Insert here your CSS */\"","module.exports = \"<!-- TITLE -->\\n<div class=\\\"mb-40 mt-40\\\">\\n    <h1>Film List</h1>\\n</div>\\n\\n<!-- SEARCH FORM -->\\n<div class=\\\"card\\\">\\n\\n    <div class=\\\"card-header\\\">\\n        <i class=\\\"fa fa-search\\\"></i> Search\\n    </div>\\n    <div class=\\\"card-body\\\">\\n        <form #searchForm=\\\"ngForm\\\">\\n            <div class=\\\"row justify-content-md-center\\\">\\n                <div class=\\\"col-md-10\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"genre\\\">Genre</label>\\n                        <select name=\\\"genre\\\" id=\\\"genre\\\" [(ngModel)]=\\\"search.genre\\\" class=\\\"form-control\\\" #genre=\\\"ngModel\\\">\\n                            <option value=\\\"Action\\\">Action</option>\\n                            <option value=\\\"Crime\\\">Crime</option>\\n                            <option value=\\\"Fantasy\\\">Fantasy</option>\\n                            <option value=\\\"Horror\\\">Horror</option>\\n                        </select>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"title\\\">Title</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"title\\\" [(ngModel)]=\\\"search.title\\\" name=\\\"title\\\" #title=\\\"ngModel\\\">\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"year\\\">Year</label>\\n                        <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"year\\\" [(ngModel)]=\\\"search.year\\\" name=\\\"year\\\" #year=\\\"ngModel\\\">\\n                    </div>\\n                </div>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n\\n<!-- TABLE -->\\n<table class=\\\"table mt-40\\\">\\n    <thead>\\n        <tr>\\n            <th scope=\\\"col\\\">ID</th>\\n            <th scope=\\\"col\\\">genre</th>\\n            <th scope=\\\"col\\\">title</th>\\n            <th scope=\\\"col\\\">year</th>\\n            <th>Remove</th>\\n        </tr>\\n    </thead>\\n    <tbody>\\n        <tr *ngFor=\\\"let item of list | search: { 'genre': search.genre, 'title': search.title, 'year': search.year }\\\">\\n            <!-- ATTRIBUTES -->\\n            <td>\\n                <a [routerLink]=\\\"['/films', item._id]\\\">{{item._id}}</a>\\n            </td>\\n            <td>{{item.genre }}</td>\\n            <td>{{item.title }}</td>\\n            <td>{{item.year }}</td>\\n\\n            <!-- DELETE BUTTON -->\\n            <td>\\n                <button class=\\\"btn btn-danger text-center\\\" data-toggle=\\\"modal\\\" data-target=\\\"#deleteModal\\\" (click)=\\\"selectId(item._id)\\\">\\n                    <span>\\n                        <i class=\\\"fa fa-trash\\\"></i>\\n                    </span>\\n                </button>\\n            </td>\\n        </tr>\\n    </tbody>\\n    <div class=\\\"no-result\\\" *ngIf=\\\"(list | search: {   'genre': search.genre ,  'title': search.title ,  'year': search.year  }).length == 0\\\">\\n        No items found\\n    </div>\\n</table>\\n\\n<!-- Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"deleteModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"deleteModalLabel\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">\\n                    <i class=\\\"fa fa-times-circle\\\"></i>&nbsp;&nbsp;Delete</h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                Do you want remove item?\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">NO</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"deleteItem()\\\">YES</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<!-- BUTTON -->\\n<button class=\\\"btn btn-primary text-center pull-right mb-20\\\" routerLink=\\\"/films/new\\\">\\n    <span>\\n        <i class=\\\"fa fa-plus\\\"></i>\\n    </span>\\n</button>\\n\\n<div class=\\\"clearfix\\\"></div>\"","import { Component } from '@angular/core';\nimport { OnInit } from '@angular/core';\n// Import Services\nimport { FilmService } from '../../services/film.service';\n// Import Models\nimport { Film } from '../../domain/manage_film_example_db/film';\n\n// START - USED SERVICES\n/**\n* FilmService.delete\n*\t@description CRUD ACTION delete\n*\n* FilmService.list\n*\t@description CRUD ACTION list\n*\n*/\n// END - USED SERVICES\n\n/**\n * This component shows a list of Film\n * @class FilmListComponent\n */\n@Component({\n    selector: 'app-film-list',\n    templateUrl: './film-list.component.html',\n    styleUrls: ['./film-list.component.css']\n})\nexport class FilmListComponent implements OnInit {\n    list: Film[];\n    search: any = {};\n    idSelected: string;\n    constructor(\n        private filmService: FilmService,\n    ) { }\n\n    /**\n     * Init\n     */\n    ngOnInit(): void {\n        this.filmService.list().subscribe(list => this.list = list);\n    }\n\n    /**\n     * Select Film to remove\n     *\n     * @param {string} id Id of the Film to remove\n     */\n    selectId(id: string) {\n        this.idSelected = id;\n    }\n\n    /**\n     * Remove selected Film\n     */\n    deleteItem() {\n        this.filmService.remove(this.idSelected).subscribe(data => this.list = this.list.filter(el => el._id !== this.idSelected));\n    }\n\n}\n","module.exports = \"/* Insert here your CSS */\"","module.exports = \"<!-- TITLE -->\\n<div class=\\\"mb-40 mt-40\\\">\\n    <h1>FilmMaker Edit</h1>\\n</div>\\n<div class=\\\"card mb-40\\\">\\n    <div class=\\\"card-header\\\">\\n        <i class=\\\"fa fa-edit\\\"></i> Edit\\n    </div>\\n    <div class=\\\"card-body\\\">\\n        <form #editForm=\\\"ngForm\\\" [ngClass]=\\\"{'was-validated': formValid!=null}\\\">\\n            <div class=\\\"row justify-content-md-center\\\">\\n                <div class=\\\"col-md-10\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"name\\\">Name *</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" [(ngModel)]=\\\"item.name\\\" name=\\\"name\\\" #name=\\\"ngModel\\\" required>\\n                        <div class=\\\"invalid-feedback\\\">Value is required</div>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"surname\\\">Surname</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"surname\\\" [(ngModel)]=\\\"item.surname\\\" name=\\\"surname\\\" #surname=\\\"ngModel\\\" >\\n                    </div>\\n                    <!-- RELATIONS -->\\n                    \\n\\n\\n                    <!-- BUTTON BAR -->\\n                    <div class=\\\"mt-40\\\">\\n                        <button class=\\\"btn btn-primary pull-right\\\" (click)=\\\"save(editForm.valid, item)\\\">Save</button>\\n                        <button class=\\\"btn btn-secondary pull-right mr-2\\\" (click)=\\\"goBack()\\\">Back To List</button>\\n                    </div>\\n                </div>\\n            </div>\\n        </form>\\n    </div>\\n</div>\"","// Import Libraries\nimport { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\n// Import Services\nimport { FilmMakerService } from '../../services/film-maker.service';\nimport { FilmService } from '../../services/film.service';\n// Import Models\nimport { FilmMaker } from '../../domain/manage_film_example_db/film-maker';\nimport { Film } from '../../domain/manage_film_example_db/film';\n\n// START - USED SERVICES\n/**\n* FilmMakerService.create\n*\t@description CRUD ACTION create\n*\n* FilmService.findByfilmMaker\n*\t@description CRUD ACTION findByfilmMaker\n*\n* FilmMakerService.get\n*\t@description CRUD ACTION get\n*\n* FilmMakerService.update\n*\t@description CRUD ACTION update\n*\n*/\n// END - USED SERVICES\n\n/**\n * This component allows to edit a FilmMaker\n */\n@Component({\n    selector: 'app-film-maker-edit',\n    templateUrl: 'film-maker-edit.component.html',\n    styleUrls: ['film-maker-edit.component.css']\n})\nexport class FilmMakerEditComponent implements OnInit {\n    item: FilmMaker;\n    listFilmMaker: FilmMaker[];\n    externalFilm: Film[];\n    model: FilmMaker;\n    formValid: Boolean;\n\n    constructor(\n    private filmmakerService: FilmMakerService,\n    private filmService: FilmService,\n    private route: ActivatedRoute,\n    private location: Location) {\n        // Init item\n        this.item = new FilmMaker();\n        this.externalFilm = [];\n    }\n\n    /**\n     * Init\n     */\n    ngOnInit() {\n        this.route.params.subscribe(param => {\n            const id: string = param['id'];\n            if (id !== 'new') {\n                this.filmmakerService.get(id).subscribe(item => this.item = item);\n                this.filmService.findByFilmMaker(id).subscribe(list => this.externalFilm = list);\n            }\n            // Get relations\n        });\n    }\n\n\n    /**\n     * Save FilmMaker\n     *\n     * @param {boolean} formValid Form validity check\n     * @param FilmMaker item FilmMaker to save\n     */\n    save(formValid: boolean, item: FilmMaker): void {\n        this.formValid = formValid;\n        if (formValid) {\n            if (item._id) {\n                this.filmmakerService.update(item).subscribe(data => this.goBack());\n            } else {\n                this.filmmakerService.create(item).subscribe(data => this.goBack());\n            } \n        }\n    }\n\n    /**\n     * Go Back\n     */\n    goBack(): void {\n        this.location.back();\n    }\n\n\n}\n\n\n\n","module.exports = \"/* Insert here your CSS */\"","module.exports = \"<!-- TITLE -->\\n<div class=\\\"mb-40 mt-40\\\">\\n    <h1>FilmMaker List</h1>\\n</div>\\n\\n<!-- SEARCH FORM -->\\n<div class=\\\"card\\\">\\n\\n    <div class=\\\"card-header\\\">\\n        <i class=\\\"fa fa-search\\\"></i> Search\\n    </div>\\n    <div class=\\\"card-body\\\">\\n        <form #searchForm=\\\"ngForm\\\">\\n            <div class=\\\"row justify-content-md-center\\\">\\n                <div class=\\\"col-md-10\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"name\\\">Name</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" [(ngModel)]=\\\"search.name\\\" name=\\\"name\\\" #name=\\\"ngModel\\\">\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"surname\\\">Surname</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"surname\\\" [(ngModel)]=\\\"search.surname\\\" name=\\\"surname\\\" #surname=\\\"ngModel\\\">\\n                    </div>\\n                </div>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n\\n<!-- TABLE -->\\n<table class=\\\"table mt-40\\\">\\n    <thead>\\n        <tr>\\n            <th scope=\\\"col\\\">ID</th>\\n            <th scope=\\\"col\\\">name</th>\\n            <th scope=\\\"col\\\">surname</th>\\n            <th>Remove</th>\\n        </tr>\\n    </thead>\\n    <tbody>\\n        <tr *ngFor=\\\"let item of list | search: { 'name': search.name, 'surname': search.surname }\\\">\\n            <!-- ATTRIBUTES -->\\n            <td>\\n                <a [routerLink]=\\\"['/filmmakers', item._id]\\\">{{item._id}}</a>\\n            </td>\\n            <td>{{item.name }}</td>\\n            <td>{{item.surname }}</td>\\n\\n            <!-- DELETE BUTTON -->\\n            <td>\\n                <button class=\\\"btn btn-danger text-center\\\" data-toggle=\\\"modal\\\" data-target=\\\"#deleteModal\\\" (click)=\\\"selectId(item._id)\\\">\\n                    <span>\\n                        <i class=\\\"fa fa-trash\\\"></i>\\n                    </span>\\n                </button>\\n            </td>\\n        </tr>\\n    </tbody>\\n    <div class=\\\"no-result\\\" *ngIf=\\\"(list | search: {   'name': search.name ,  'surname': search.surname  }).length == 0\\\">\\n        No items found\\n    </div>\\n</table>\\n\\n<!-- Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"deleteModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"deleteModalLabel\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">\\n                    <i class=\\\"fa fa-times-circle\\\"></i>&nbsp;&nbsp;Delete</h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                Do you want remove item?\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">NO</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"deleteItem()\\\">YES</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<!-- BUTTON -->\\n<button class=\\\"btn btn-primary text-center pull-right mb-20\\\" routerLink=\\\"/filmmakers/new\\\">\\n    <span>\\n        <i class=\\\"fa fa-plus\\\"></i>\\n    </span>\\n</button>\\n\\n<div class=\\\"clearfix\\\"></div>\"","import { Component } from '@angular/core';\nimport { OnInit } from '@angular/core';\n// Import Services\nimport { FilmMakerService } from '../../services/film-maker.service';\n// Import Models\nimport { FilmMaker } from '../../domain/manage_film_example_db/film-maker';\n\n// START - USED SERVICES\n/**\n* FilmMakerService.delete\n*\t@description CRUD ACTION delete\n*\n* FilmMakerService.list\n*\t@description CRUD ACTION list\n*\n*/\n// END - USED SERVICES\n\n/**\n * This component shows a list of FilmMaker\n * @class FilmMakerListComponent\n */\n@Component({\n    selector: 'app-film-maker-list',\n    templateUrl: './film-maker-list.component.html',\n    styleUrls: ['./film-maker-list.component.css']\n})\nexport class FilmMakerListComponent implements OnInit {\n    list: FilmMaker[];\n    search: any = {};\n    idSelected: string;\n    constructor(\n        private filmmakerService: FilmMakerService,\n    ) { }\n\n    /**\n     * Init\n     */\n    ngOnInit(): void {\n        this.filmmakerService.list().subscribe(list => this.list = list);\n    }\n\n    /**\n     * Select FilmMaker to remove\n     *\n     * @param {string} id Id of the FilmMaker to remove\n     */\n    selectId(id: string) {\n        this.idSelected = id;\n    }\n\n    /**\n     * Remove selected FilmMaker\n     */\n    deleteItem() {\n        this.filmmakerService.remove(this.idSelected).subscribe(data => this.list = this.list.filter(el => el._id !== this.idSelected));\n    }\n\n}\n","module.exports = \"/* Insert here your CSS */\"","module.exports = \"<!-- TITLE -->\\n\\n<div class=\\\"mb-40 mt-40\\\">\\n  <h1>Home</h1>\\n</div>\\n\\n<!-- SEARCH FORM -->\\n<div>\\n  <!-- START LINKS -->\\n    <div>\\r\\n        <a routerLink=\\\"/actors\\\" routerLinkActive=\\\"active\\\">Link to List Actor</a>\\r\\n    </div>\\r\\n    <div>\\r\\n        <a routerLink=\\\"/films\\\" routerLinkActive=\\\"active\\\">Link to List Film</a>\\r\\n    </div>\\r\\n    <div>\\r\\n        <a routerLink=\\\"/filmmakers\\\" routerLinkActive=\\\"active\\\">Link to List FilmMaker</a>\\r\\n    </div>\\r\\n <!-- END LINKS -->\\n</div>\"","// Import Libraries\nimport { Component } from '@angular/core';\nimport { Location } from '@angular/common';\n\n// Import Services\n\n// START - USED SERVICES\n\n// END - USED SERVICES\n\n/**\n * Home Component\n */\n@Component({\n    selector: 'app-home',\n    templateUrl : './home.component.html',\n    styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n\n    constructor(\n        private location: Location\n        ) {\n\n    }\n}\n","module.exports = \"\\n\"","module.exports = \"<div class=\\\"row justify-content-md-center mt-40\\\">\\n    <div class=\\\"col-md-7\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-body text-center\\\">\\n                <h2>Welcome in</h2>\\n                <h2 class=\\\"mb-40\\\">ManageFilmExample</h2>\\n                <form #loginForm=\\\"ngForm\\\">\\n                    <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"showError\\\">\\n                        Username or Password not valid\\n                    </div>\\n                    <div class=\\\"form-group\\\" [ngClass]=\\\"{'was-validated': (loginForm.submitted && username.invalid) || (username.dirty && username.invalid)}\\\">\\n                        <label class=\\\"pull-left\\\" for=\\\"username\\\"><strong>Username</strong></label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username\\\" [(ngModel)]=\\\"user.username\\\" name=\\\"username\\\" #username=\\\"ngModel\\\" required>\\n                        <div *ngIf=\\\"(loginForm.submitted && username.invalid) || (username.dirty && username.invalid)\\\" class=\\\"alert alert-danger\\\">\\n                            Username is required\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group\\\" [ngClass]=\\\"{'was-validated': (loginForm.submitted && password.invalid) || (password.dirty && password.invalid)}\\\">\\n                        <label class=\\\"pull-left\\\" for=\\\"password\\\"><strong>Password</strong></label>\\n                        <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" [(ngModel)]=\\\"user.password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" required>\\n                        <div *ngIf=\\\"(loginForm.submitted && password.invalid) || (password.dirty && password.invalid)\\\" class=\\\"alert alert-danger\\\">\\n                            Password is required\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group \\\">\\n                        <input type=\\\"checkbox\\\" class=\\\"pull-right mt-8\\\" [(ngModel)]=\\\"remember\\\" name=\\\"remember\\\">\\n                        <label class=\\\"pull-right\\\">Remember login&nbsp;</label>\\n                    </div>\\n                    <div class=\\\"clearfix\\\"></div>\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-success pull-right\\\" (click)=\\\"login(loginForm)\\\">Login</button>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component } from '@angular/core';\nimport { User } from 'src/app/domain/manage_film_example_db/user';\nimport { NgForm } from '@angular/forms';\nimport { AuthenticationService } from 'src/app/security/authentication.service';\nimport {Md5} from 'ts-md5/dist/md5';\nimport { Router } from '@angular/router';\nimport { store } from 'src/app/security/current-user';\nimport { SecurityService } from 'src/app/security/services/security.service';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n    user: User = new User(null, null, null, null);\n    showError: boolean;\n    remember: boolean;\n    constructor(\n        private securityService: SecurityService,\n        private router: Router\n    ) {}\n    login(form: NgForm) {\n        if (form.valid) {\n            const md5pass = Md5.hashStr(this.user.password).toString();\n            this.securityService.login(this.user.username, md5pass, this.remember === undefined ? false : this.remember)\n            .subscribe(\n                user => {\n                    this.showError = false;\n                    this.router.navigate(['/']);\n                    this.setUser(user);\n                },\n                err => this.showError = true\n            );\n        }\n    }\n    private setUser(user: User) {\n        store.setUser(user);\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * This pipe allows to filter a list of items\n *\n * @example\n *  <div *ngFor=\"let item of list | search:{'field_1' : search1, 'field_2' : search2 }\">\n *  </div>\n *\n */\n@Pipe({ name: 'search' })\nexport class SearchPipe implements PipeTransform {\n\n    transform(list: any[], filter: any): any[] {\n\n        // if list is null or empty\n        if (!list || !list.length) return [];\n\n        // map objects in filter\n        Object.keys(filter).map(function (fieldName) {\n\n            // get key to search\n            const key: string = filter[fieldName];\n            if (key) {\n\n                // filter list for esch type of filter\n                list = list.filter(item => {\n                    const field = item[fieldName];\n\n                    // filter string\n                    if (typeof field === 'string') {\n                        return field.toLowerCase().indexOf(key.toLocaleLowerCase()) !== -1;\n                    }\n\n                    if (typeof field === 'boolean') {\n                        if (typeof key === 'boolean')\n                            return field === key;\n                    }\n\n                    if (typeof field === 'number') {\n                        return field.toString().toLowerCase().indexOf(key.toString().toLocaleLowerCase()) !== -1;\n                    }\n\n                    // filter array\n                    if (Array.isArray(field)) {\n                        // find key in list\n                        const found = field.filter(el => {\n                            if (el.toLowerCase().indexOf(key.toLocaleLowerCase()) !== -1)\n                                return el;\n                        });\n\n                        return found.length > 0;\n                    }\n                });\n            }\n        });\n        return list;\n    }\n}\n","import { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthenticationService } from 'src/app/security/authentication.service';\nimport { store } from 'src/app/security/current-user';\nimport { Observable } from 'rxjs';\nimport { User } from 'src/app/domain/manage_film_example_db/user';\n\n/**\n * This class intercept route change and check for security\n */\n@Injectable()\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private http: HttpClient,\n        private authenticationService: AuthenticationService\n    ) { }\n\n    /**\n     * Check routes permission\n     */\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | boolean {\n\n        // Get authorized roles for route\n        const roles = [];\n        Object.keys(route.data).forEach(key => roles.push(route.data[key]));\n\n        // Return observable\n        return new Observable<boolean>((ob: any) => {\n            // Get logged user\n            this.authenticationService.getUser().subscribe(user => {\n                if (!user) {\n                    // Not logged\n                    ob.next(false);\n                    this.router.navigate(['/login']);\n                } else {\n                    // Logged user\n                    const userObj: User = new User(user._id, user.username, user.token, user.roles);\n                    if (roles && roles.length > 0) {\n                        // Check roles\n                        if (userObj.hasRole(roles)) {\n                            ob.next(true);\n                        } else {\n                            ob.next(false);\n                            this.router.navigate(['/login']);\n                        }\n                    }\n                    ob.next(true);\n                }\n            });\n        });\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n/**\n * This interceptor get token from sessionStorage if it is set and put the JWT token in the header Authorization var\n */\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n        // Get token\n        const token = sessionStorage.getItem('token') || localStorage.getItem('token');\n        if (token) {\n            const cloned = req.clone({\n                headers: req.headers.set('Authorization', 'Bearer ' + token)\n            });\n            return next.handle(cloned);\n        } else {\n            return next.handle(req);\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from 'src/app/domain/manage_film_example_db/user';\nimport { store } from 'src/app/security/current-user';\nimport { SecurityService } from 'src/app/security/services/security.service';\nimport { Router } from '@angular/router';\n\n/**\n * This service manage the Authentication\n */\n@Injectable()\nexport class AuthenticationService {\n    constructor(\n        private securityService: SecurityService,\n        private router: Router,\n    ) { }\n\n    /**\n     * Get the logged user\n     */\n    public getUser(): Observable<User> {\n        return new Observable<User>((ob: any) => {\n\n            // Get JWT token from browser storage\n            const token = sessionStorage.getItem('token') || localStorage.getItem('token');\n\n            // Get user from store\n            store.currentUser$.subscribe(user => {\n                if (token && user) {\n                    // User logged and stored token\n                    ob.next(user);\n                } else if (token && !user) {\n                    // If refresh page and have token but not logged user\n                    // Verify token and get user\n                    this.securityService.verifyToken(token).subscribe(\n                        usr => {\n                            if (!usr || (!usr._id && !usr.success)) {\n                                ob.next(undefined);\n                            } else {\n                                ob.next(usr);\n                            }\n                        }\n                    );\n                } else {\n                    // Logged user\n                    ob.next(user);\n                }\n            });\n        });\n    }\n\n    /**\n     * Logout function\n     */\n    logout() {\n        // Clear token and remove user from local storage to log user logout\n        localStorage.removeItem('token');\n        sessionStorage.removeItem('token');\n        store.setUser(null);\n        this.router.navigate(['/login']);\n    }\n\n}","import { BehaviorSubject, Observable } from 'rxjs';\nimport { User } from 'src/app/domain/manage_film_example_db/user';\nimport * as _ from 'lodash';\n\n/**\n * Store the current user\n */\nclass CurrentUser {\n    private currentUserSubject = new BehaviorSubject(null);\n    public currentUser$: Observable<User> = this.currentUserSubject.asObservable();\n\n    setUser(user: User) {\n        this.currentUserSubject.next(_.cloneDeep(user));\n    }\n}\n\nexport const store = new CurrentUser();\n","module.exports = \"<!-- TITLE -->\\n<div class=\\\"mb-40 mt-40\\\">\\n    <h1>Edit User</h1>\\n</div>\\n\\n<div class=\\\"card\\\">\\n    <div class=\\\"card-body\\\">\\n        <form #editForm=\\\"ngForm\\\" *ngIf=\\\"user\\\">\\n            <div class=\\\"row justify-content-md-center\\\">\\n                <div class=\\\"col-md-10\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"username\\\">Username</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username\\\" [(ngModel)]=\\\"user.username\\\" name=\\\"username\\\" #username=\\\"ngModel\\\" required [disabled]=\\\"user._id\\\">\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"username\\\">mail</label>\\n                        <input type=\\\"string\\\" class=\\\"form-control\\\" id=\\\"mail\\\" [(ngModel)]=\\\"user.mail\\\" name=\\\"mail\\\" #mail=\\\"ngModel\\\" >\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"username\\\">name</label>\\n                        <input type=\\\"string\\\" class=\\\"form-control\\\" id=\\\"name\\\" [(ngModel)]=\\\"user.name\\\" name=\\\"name\\\" #name=\\\"ngModel\\\" >\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"username\\\">surname</label>\\n                        <input type=\\\"string\\\" class=\\\"form-control\\\" id=\\\"surname\\\" [(ngModel)]=\\\"user.surname\\\" name=\\\"surname\\\" #surname=\\\"ngModel\\\" >\\n                    </div>\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"!user._id\\\">\\n                        <label for=\\\"name\\\">Password</label>\\n                        <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" [(ngModel)]=\\\"user.password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" required>\\n                    </div>\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"!user._id\\\">\\n                        <label for=\\\"name\\\">Password confirm</label>\\n                        <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"passwordConfirm\\\" [(ngModel)]=\\\"user.passwordConfirm\\\" name=\\\"passwordConfirm\\\" #passwordConfirm=\\\"ngModel\\\" required>\\n                    </div>\\n                    <!-- ROLE MANAGEMENT -->\\n                    <h3>Roles</h3>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"form-group col-12\\\">\\n                            <label for=\\\"name\\\">New role...</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"newRole\\\" name=\\\"newRole\\\" #newRole>\\n                        </div>\\n                        <div class=\\\"col-12\\\">\\n                            <span class=\\\"btn btn-primary text-center pull-right mb-20\\\" (click)=\\\"addRole(newRole)\\\">\\n                                <i class=\\\"fa fa-plus\\\"></i>\\n                            </span>\\n                        </div>\\n                    </div>\\n                    <!-- NO ROLES -->\\n                    <label *ngIf=\\\"!user.roles || user.roles.length==0\\\">\\n                        No roles assigned to user\\n                    </label>\\n                    <!-- NO ROLES -->\\n                    <div *ngFor=\\\"let role of user.roles; let i = index; trackBy:trackByFn\\\" class=\\\"row mt-2\\\">\\n                        <div class=\\\"form-group\\\" class=\\\"col-11\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"role\\\" [(ngModel)]=\\\"user.roles[i]\\\" name=\\\"roles\\\">\\n                        </div>\\n                        <span class=\\\"btn btn-danger text-center col-1\\\" (click)=\\\"removeRole(i)\\\">\\n                            <i class=\\\"fa fa-trash\\\"></i>\\n                        </span>\\n                    </div>\\n                    <div class=\\\"mt-40\\\">\\n                        <button class=\\\"btn btn-info\\\" *ngIf=\\\"user._id\\\" data-toggle=\\\"modal\\\" data-target=\\\"#changePasswordModal\\\">Change Password</button>\\n                        <button class=\\\"btn btn-primary pull-right\\\" color=\\\"primary\\\" [disabled]=\\\"editForm.invalid\\\" (click)=\\\"save()\\\">Save</button>\\n                        <button class=\\\"btn btn-secondary pull-right mr-2\\\" routerLink=\\\"/manage-users\\\">Back To User List</button>\\n                    </div>\\n                </div>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n\\n<!-- Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"changePasswordModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"deleteModalLabel\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\"><i class=\\\"fa fa-lock\\\"></i>&nbsp;&nbsp;Change password</h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                  </button>\\n            </div>\\n            <form #changePasswordForm=\\\"ngForm\\\" class=\\\"container-fluid\\\">\\n                <div class=\\\"modal-body\\\">\\n                    <div class=\\\"row justify-content-md-center\\\">\\n                        <div class=\\\"col-10\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"passwordAdmin\\\">Password Admin</label>\\n                                <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"passwordAdmin\\\" [(ngModel)]=\\\"passwordAdmin\\\" name=\\\"passwordAdmin\\\" #passwordAdminForm=\\\"ngModel\\\" required>\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"passwordNew\\\">New Password</label>\\n                                <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"passwordNew\\\" [(ngModel)]=\\\"passwordNew\\\" name=\\\"passwordNew\\\" #passwordNewForm=\\\"ngModel\\\" required>\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"passwordNewConfirm\\\">Confirm New Password</label>\\n                                <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"passwordNewConfirm\\\" [(ngModel)]=\\\"passwordNewConfirm\\\" name=\\\"passwordNewConfirm\\\" #passwordNewConfirmForm=\\\"ngModel\\\" [ngClass]=\\\"{'is-invalid': passwordNew && passwordNewConfirm && passwordNew !== passwordNewConfirm}\\\"\\n                                    required>\\n                                <p *ngIf=\\\"passwordNew && passwordNewConfirm && passwordNew !== passwordNewConfirm\\\" class=\\\"help-block\\\">Passwords missmatch</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </form>\\n            <div *ngIf=\\\"showError\\\" class=\\\"row justify-content-md-center\\\">\\n                <div class=\\\"alert alert-danger text-left\\\">\\n                    <strong>Error!</strong> Admin passsword not valid\\n                </div>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" #closeModal class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"changePasswordForm.invalid || (passwordAdmin && passwordNewConfirm && passwordNew !== passwordNewConfirm)\\\" (click)=\\\"changePassword()\\\">Save</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component } from '@angular/core';\nimport { OnInit } from '@angular/core';\nimport { User } from 'src/app/domain/manage_film_example_db/user';\nimport { UserService } from 'src/app/services/user.service';\nimport { AuthenticationService } from 'src/app/security/authentication.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Md5 } from 'ts-md5/dist/md5';\nimport { ViewChild, ElementRef } from '@angular/core';\n\ndeclare var jQuery: any;\n/**\n * Edit user by Admin\n */\n@Component({\n    selector: 'app-manage-user-edit',\n    templateUrl: './manage-user-edit.component.html',\n})\nexport class ManageUserEditComponent implements OnInit {\n\n    user: User;\n    passwordNew: string;\n    passwordNewConfirm: string;\n    passwordAdmin: string;\n    showError: boolean;\n    @ViewChild('closeModal') closeModal: ElementRef;\n\n    constructor(\n        private userService: UserService,\n        private authenticationService: AuthenticationService,\n        private router: Router,\n        private route: ActivatedRoute\n    ) { }\n\n    ngOnInit(): void {\n\n        this.route.params.subscribe(params => {\n\n            if (params.id === 'new') {\n                // New User\n                this.user = new User(null, null, null, []);\n            } else {\n                // Get User\n                this.userService.get(params.id).subscribe(user => this.user = user);\n            }\n        });\n    }\n\n    /**\n     * Save or create User\n     */\n    save(): void {\n        if (this.user._id) {\n            // Save\n            this.userService.update(this.user).subscribe(data => this.router.navigateByUrl('/manage-users'));\n        } else {\n            // Create\n            this.user.password = Md5.hashStr(this.user.password).toString();\n            this.userService.create(this.user).subscribe(data => this.router.navigateByUrl('/manage-users'));\n        }\n    }\n\n    /**\n     * Delete user\n     */\n    deleteUser(): void {\n        this.userService.remove(this.user._id).subscribe(data => this.router.navigateByUrl('/manage-users'));\n    }\n\n    /**\n     * Add roles to user\n     *\n     * @param {*} role Role to add\n     */\n    addRole(role: any): void {\n        if (role.value) {\n            this.user.roles.push(role.value);\n            role.value = '';\n        }\n    }\n\n    /**\n     * Remove role from user\n     *\n     * @param {number} index Index of the role in the array\n     */\n    removeRole(index: number) {\n        this.user.roles.splice(index, 1);\n    }\n\n    /**\n     * Change user password\n     */\n    changePassword() {\n        const passwordNew = Md5.hashStr(this.passwordNew).toString();\n        const passwordAdmin = Md5.hashStr(this.passwordAdmin).toString();\n\n        this.userService.changePassword(this.user._id, passwordNew, passwordAdmin).subscribe(data => {\n            this.passwordAdmin = null;\n            this.passwordNew = null;\n            this.passwordNewConfirm = null;\n            this.showError = false;\n            this.closeModal.nativeElement.click();\n        }, err => {\n            this.showError = true;\n        });\n    }\n\n    trackByFn(index: number, item: any) {\n        return index;\n    }\n}\n","module.exports = \"<!-- TITLE -->\\n<div class=\\\"mb-40 mt-40\\\">\\n    <h1>Manage User</h1>\\n</div>\\n\\n<!-- SEARCH FORM -->\\n<div class=\\\"card\\\">\\n\\n    <div class=\\\"card-header\\\">\\n        <i class=\\\"fa fa-search\\\"></i> Search\\n    </div>\\n    <div class=\\\"card-body\\\">\\n        <form #searchForm=\\\"ngForm\\\">\\n            <div class=\\\"row justify-content-md-center\\\">\\n                <div class=\\\"col-md-10\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"title\\\">Username</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username\\\" [(ngModel)]=\\\"search.username\\\" name=\\\"username\\\" #username=\\\"ngModel\\\">\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"username\\\">mail</label>\\n                        <input type=\\\"string\\\" class=\\\"form-control\\\" id=\\\"mail\\\" [(ngModel)]=\\\"search.mail\\\" name=\\\"mail\\\" #mail=\\\"ngModel\\\" >\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"username\\\">name</label>\\n                        <input type=\\\"string\\\" class=\\\"form-control\\\" id=\\\"name\\\" [(ngModel)]=\\\"search.name\\\" name=\\\"name\\\" #name=\\\"ngModel\\\" >\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"username\\\">surname</label>\\n                        <input type=\\\"string\\\" class=\\\"form-control\\\" id=\\\"surname\\\" [(ngModel)]=\\\"search.surname\\\" name=\\\"surname\\\" #surname=\\\"ngModel\\\" >\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"title\\\">Role</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"role\\\" [(ngModel)]=\\\"search.role\\\" name=\\\"role\\\" #role=\\\"ngModel\\\">\\n                    </div>\\n                </div>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n\\n\\n<!-- TABLE LIST -->\\n<table class=\\\"table table-hover mt-40\\\">\\n    <thead>\\n        <tr>\\n            <th>Username</th>\\n            <th>Mail</th>\\n            <th>Name</th>\\n            <th>Surname</th>\\n            <th>Roles</th>\\n        </tr>\\n    </thead>\\n    <tbody>\\n        <tr *ngFor=\\\"let user of users | search:{'username' : search.username, 'name' : search.name, 'surname' : search.surname, 'mail' : search.mail, 'roles' : search.role }\\\">\\n            <td><a [routerLink]=\\\"['/manage-users/', user._id]\\\">{{user.username}}</a></td>\\n            <td>{{user.mail }}</td>\\n            <td>{{user.name }}</td>\\n            <td>{{user.surname }}</td>\\n            <td>\\n                <span *ngFor=\\\"let role of user.roles\\\" class=\\\"badge badge-pill badge-primary mr-2\\\">{{role}}</span>\\n            </td>\\n        </tr>\\n    </tbody>\\n</table>\\n\\n<!-- BUTTON -->\\n<button class=\\\"btn btn-primary text-center pull-right mb-20\\\" routerLink=\\\"/manage-users/new\\\">\\n    <span>\\n        <i class=\\\"fa fa-plus\\\"></i>\\n    </span>\\n</button>\"","// COMPONENT\nimport { Component, OnInit } from '@angular/core';\n\n// SERVICES\nimport { UserService } from 'src/app/services/user.service';\n\n// MODEL\nimport { User } from 'src/app/domain/manage_film_example_db/user';\n\n\n/**\n * List of all users\n */\n@Component({\n    selector: 'app-manage-user-list',\n    templateUrl: './manage-user-list.component.html'\n})\nexport class ManageUserListComponent implements OnInit {\n    users: User[];\n    search: any = {};\n\n    constructor(private userService: UserService) {}\n\n    ngOnInit(): void {\n        // Get list users\n        this.userService.list().subscribe(list => this.users = list);\n    }\n\n}\n","module.exports = \"<!-- TITLE -->\\n<div class=\\\"mb-40 mt-40\\\">\\n    <h1>My Profile</h1>\\n</div>\\n\\n<div class=\\\"card\\\">\\n    <form #profileForm=\\\"ngForm\\\" class=\\\"container-fluid mt-20\\\" *ngIf=\\\"user\\\">\\n        <div class=\\\"row justify-content-md-center mt-40 mb-40\\\">\\n            <div class=\\\"col-md-10\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"username\\\">Username</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username\\\" [(ngModel)]=\\\"user.username\\\" name=\\\"username\\\" #username=\\\"ngModel\\\" required disabled>\\n                </div>\\n                <div class=\\\"mt-40\\\">\\n                    <button class=\\\"btn btn-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#changePasswordModal\\\">Change Password</button>\\n                    <button class=\\\"btn btn-primary pull-right\\\" color=\\\"primary\\\" [disabled]=\\\"profileForm.invalid\\\" (click)=\\\"save(profileForm.valid)\\\">Save</button>\\n                    <button class=\\\"btn btn-secondary pull-right mr-2\\\" routerLink=\\\"/home\\\">Back To Home</button>\\n                </div>\\n            </div>\\n        </div>\\n    </form>\\n</div>\\n<!-- Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"changePasswordModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"deleteModalLabel\\\" aria-hidden=\\\"true\\\">\\n        <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n            <div class=\\\"modal-content\\\">\\n                <div class=\\\"modal-header\\\">\\n                    <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\"><i class=\\\"fa fa-lock\\\"></i>&nbsp;&nbsp;Change password</h5>\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\n                      </button>\\n                </div>\\n                <form #changePasswordForm=\\\"ngForm\\\" class=\\\"container-fluid\\\">\\n                    <div class=\\\"modal-body\\\">\\n                        <div class=\\\"row justify-content-md-center\\\">\\n                            <div class=\\\"col-10\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"passwordOld\\\">Old Password</label>\\n                                    <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"passwordOld\\\" [(ngModel)]=\\\"passwordOld\\\" name=\\\"passwordOld\\\" #passwordOldForm=\\\"ngModel\\\" required>\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"passwordNew\\\">New Password</label>\\n                                    <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"passwordNew\\\" [(ngModel)]=\\\"passwordNew\\\" name=\\\"passwordNew\\\" #passwordNewForm=\\\"ngModel\\\" required>\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"passwordNewConfirm\\\">Confirm New Password</label>\\n                                    <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"passwordNewConfirm\\\" [(ngModel)]=\\\"passwordNewConfirm\\\" name=\\\"passwordNewConfirm\\\" #passwordNewConfirmForm=\\\"ngModel\\\" [ngClass]=\\\"{'is-invalid': passwordNew && passwordNewConfirm && passwordNew !== passwordNewConfirm}\\\"\\n                                        required>\\n                                    <p *ngIf=\\\"passwordNew && passwordNewConfirm && passwordNew !== passwordNewConfirm\\\" class=\\\"help-block\\\">Passwords missmatch</p>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </form>\\n                <div *ngIf=\\\"showError\\\" class=\\\"row justify-content-md-center\\\">\\n                    <div class=\\\"alert alert-danger text-left\\\">\\n                        <strong>Error!</strong> Old passsword not valid\\n                    </div>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"button\\\" #closeModal class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"changePasswordForm.invalid || (passwordAdmin && passwordNewConfirm && passwordNew !== passwordNewConfirm)\\\" (click)=\\\"changePassword()\\\">Save</button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\"","// Import Libraries\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Md5 } from 'ts-md5/dist/md5';\n\n// Security\nimport { SecurityService } from '../services/security.service';\nimport { AuthenticationService } from '../authentication.service';\nimport { User } from 'src/app/domain/manage_film_example_db/user';\nimport { UserService } from 'src/app/services/user.service';\nimport { store } from 'src/app/security/current-user';\n\n/**\n * Edit my profile\n */\n@Component({\n    selector: 'app-profile',\n    templateUrl: './profile.component.html',\n})\nexport class ProfileComponent implements OnInit {\n\n    user: User;\n    passwordOld: string;\n    passwordNew: string;\n    passwordNewConfirm: string;\n    showError: boolean;\n    @ViewChild('closeModal') closeModal: ElementRef;\n\n    constructor(\n        private userService: UserService,\n        private authenticationService: AuthenticationService,\n        private securityService: SecurityService,\n        private router: Router,\n        private route: ActivatedRoute,\n    ) { }\n\n    ngOnInit(): void {\n        this.route.params.subscribe(params => {\n            // Get logged user\n            this.authenticationService.getUser().subscribe(user => this.user = user);\n        });\n    }\n\n    /**\n     * Save User\n     *\n     * @param {boolean} valid Form validity\n     */\n    save(valid: boolean) {\n        if (valid)\n            this.userService.update(this.user).subscribe(data => {\n                this.userService.get(this.user._id).subscribe(user => {\n                    store.setUser(user);\n                    this.router.navigateByUrl('/home');\n                });\n            });\n    }\n\n    /**\n     * Change password of user\n     */\n    changePassword() {\n        this.showError = false;\n\n        // Convert passwords in MD5\n        const passwordNew = Md5.hashStr(this.passwordNew).toString();\n        const passwordOld = Md5.hashStr(this.passwordOld).toString();\n\n        // Change password\n        this.securityService.changePassword(passwordNew, passwordOld).subscribe(data => {\n            this.passwordOld = null;\n            this.passwordNew = '';\n            this.passwordNewConfirm = '';\n            this.showError = false;\n            this.closeModal.nativeElement.click();\n        }, err => {\n            this.showError = true;\n        });\n    }\n}\n\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable} from 'rxjs';\nimport { User } from 'src/app/domain/manage_film_example_db/user';\nimport { shareReplay, map, tap } from 'rxjs/operators';\n\n/**\n * Manage rest API about security\n */\n@Injectable()\nexport class SecurityService {\n    contextUrl = environment.endpoint;\n    constructor(\n        private http: HttpClient,\n    ) { }\n\n    /**\n     * Login by username and md5 password\n     *\n     * @param {string} username username for login\n     * @param {string} password password in MD5\n     * @param {boolean} remember store token in local storage\n     * @returns {Observable<User>} logged user\n     */\n    login(username: string, password: string, remember: boolean): Observable<User> {\n        return this.http.post<User>(this.contextUrl + '/login', { username: username, password: password })\n            .pipe(\n                tap(user => this.setSession(user.token)),\n                tap(user => { if (remember) this.setLocal(user.token); }),\n                map(user => user),\n                shareReplay()\n            );\n    }\n\n    /**\n     * Verify JWT token\n     *\n     * @param {string} token JWT token to verify\n     * @returns {Observable<any>} logged user or error message\n     */\n    verifyToken(token: string): Observable<any> {\n        return this.http.post<any>(this.contextUrl + '/verifyToken', { token: token })\n            .pipe(\n                map(user => user)\n            );\n    }\n\n    /**\n     * Change password of current user\n     *\n     * @param {string} passwordNew New password to set in MD5\n     * @param {string} passwordOld Old password to check in MD5\n     * @returns {Observable<void>} Success or error\n     */\n    changePassword(passwordNew: string, passwordOld: string): Observable<void> {\n        return this.http\n            .post<void>(this.contextUrl + '/changePassword', {\n                passwordNew: passwordNew,\n                passwordOld: passwordOld\n            })\n            .pipe(\n                map(response => response)\n            );\n    }\n\n    /**\n     * Set token in sessionStorage\n     *\n     * @private\n     * @param {*} token JWT token to set in sessionStorage\n     */\n    private setSession(token) {\n        sessionStorage.setItem('token', token);\n    }\n\n    /**\n     * Set token in localStorage\n     *\n     * @private\n     * @param {*} token JWT token to set in localStorage\n     */\n    private setLocal(token) {\n        localStorage.setItem('token', token);\n    }\n\n}\n","// BASE SERVICE\nimport { ActorBaseService } from './base/actor.base.service';\n\n\n// start documentation\n/**\n * Custom APIs\n *\n */\n// end documentation\n\n/**\n * YOU CAN OVERRIDE HERE ActorBaseService\n */\nexport class ActorService extends ActorBaseService {\n\n}\n","/**\n *\n *\n  _____                      _              _ _ _     _   _     _        __ _ _\n |  __ \\                    | |            | (_) |   | | | |   (_)      / _(_) |\n | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___\n | |  | |/ _ \\  | '_ \\ / _ \\| __|  / _ \\/ _` | | __| | __| '_ \\| / __| |  _| | |/ _ \\\n | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \\__ \\ | | | | |  __/\n |_____/ \\___/  |_| |_|\\___/ \\__|  \\___|\\__,_|_|\\__|  \\__|_| |_|_|___/ |_| |_|_|\\___|\n\n * DO NOT EDIT THIS FILE!!\n *\n *  FOR CUSTOMIZE actorBaseService PLEASE EDIT ../actor.service.ts\n *\n *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER'S CODE GENERATION --\n *\n */\n // DEPENDENCIES\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\n\n// CONFIG\nimport { environment } from '../../../environments/environment';\n\n// MODEL\nimport { Actor } from '../../domain/manage_film_example_db/actor';\n\n/**\n * THIS SERVICE MAKE HTTP REQUEST TO SERVER, FOR CUSTOMIZE IT EDIT ../Actor.service.ts\n */\n\n/*\n * SCHEMA DB Actor\n *\n\t{\n\t\tbirthDate: {\n\t\t\ttype: 'Date'\n\t\t},\n\t\tname: {\n\t\t\ttype: 'String',\n\t\t\trequired : true\n\t\t},\n\t\tsurname: {\n\t\t\ttype: 'String'\n\t\t},\n\t\t//RELATIONS\n\t\t//EXTERNAL RELATIONS\n\t\tcast: [{\n\t\t\ttype: Schema.ObjectId,\n\t\t\tref : \"Film\"\n\t\t}],\n\t}\n *\n */\n@Injectable()\nexport class ActorBaseService {\n\n    contextUrl: string = environment.endpoint + '/actors';\n    constructor(\n        protected http: HttpClient\n        ) { }\n\n    // CRUD METHODS\n\n    /**\n    * ActorService.create\n    *   @description CRUD ACTION create\n    *\n    */\n    create(item: Actor): Observable<Actor> {\n        return this.http\n            .post<Actor>(this.contextUrl, item)\n            .pipe(map(data => data));\n    }\n\n    /**\n    * ActorService.delete\n    *   @description CRUD ACTION delete\n    *   @param ObjectId id Id\n    *\n    */\n    remove(id: string): Observable<void> {\n        return this.http\n            .delete<void>(this.contextUrl + '/' + id)\n            .pipe(map(data => data));\n    }\n\n    /**\n    * ActorService.get\n    *   @description CRUD ACTION get\n    *   @param ObjectId id Id \n    *\n    */\n    get(id: string): Observable<Actor> {\n        return this.http\n            .get<Actor>(this.contextUrl + '/' + id)\n            .pipe(map(data => data));\n    }\n\n    /**\n    * ActorService.list\n    *   @description CRUD ACTION list\n    *\n    */\n    list(): Observable<Actor[]> {\n        return this.http\n            .get<Actor[]>(this.contextUrl)\n            .pipe(map(data => data));\n    }\n\n    /**\n    * ActorService.update\n    *   @description CRUD ACTION update\n    *   @param ObjectId id Id\n    *\n    */\n    update(item: Actor): Observable<Actor> {\n        return this.http\n            .post<Actor>(this.contextUrl + '/' + item._id, item)\n            .pipe(map(data => data));\n    }\n\n\n    // Custom APIs\n\n}\n","/**\n *\n *\n  _____                      _              _ _ _     _   _     _        __ _ _\n |  __ \\                    | |            | (_) |   | | | |   (_)      / _(_) |\n | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___\n | |  | |/ _ \\  | '_ \\ / _ \\| __|  / _ \\/ _` | | __| | __| '_ \\| / __| |  _| | |/ _ \\\n | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \\__ \\ | | | | |  __/\n |_____/ \\___/  |_| |_|\\___/ \\__|  \\___|\\__,_|_|\\__|  \\__|_| |_|_|___/ |_| |_|_|\\___|\n\n * DO NOT EDIT THIS FILE!!\n *\n *  FOR CUSTOMIZE film-makerBaseService PLEASE EDIT ../film-maker.service.ts\n *\n *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER'S CODE GENERATION --\n *\n */\n // DEPENDENCIES\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\n\n// CONFIG\nimport { environment } from '../../../environments/environment';\n\n// MODEL\nimport { FilmMaker } from '../../domain/manage_film_example_db/film-maker';\n\n/**\n * THIS SERVICE MAKE HTTP REQUEST TO SERVER, FOR CUSTOMIZE IT EDIT ../FilmMaker.service.ts\n */\n\n/*\n * SCHEMA DB FilmMaker\n *\n\t{\n\t\tname: {\n\t\t\ttype: 'String',\n\t\t\trequired : true\n\t\t},\n\t\tsurname: {\n\t\t\ttype: 'String'\n\t\t},\n\t\t//RELATIONS\n\t\t//EXTERNAL RELATIONS\n\t\tfilmMaker: {\n\t\t\ttype: Schema.ObjectId,\n\t\t\trequired : true,\n\t\t\tref : \"Film\"\n\t\t},\n\t}\n *\n */\n@Injectable()\nexport class FilmMakerBaseService {\n\n    contextUrl: string = environment.endpoint + '/filmmakers';\n    constructor(\n        protected http: HttpClient\n        ) { }\n\n    // CRUD METHODS\n\n    /**\n    * FilmMakerService.create\n    *   @description CRUD ACTION create\n    *\n    */\n    create(item: FilmMaker): Observable<FilmMaker> {\n        return this.http\n            .post<FilmMaker>(this.contextUrl, item)\n            .pipe(map(data => data));\n    }\n\n    /**\n    * FilmMakerService.delete\n    *   @description CRUD ACTION delete\n    *\n    */\n    remove(id: string): Observable<void> {\n        return this.http\n            .delete<void>(this.contextUrl + '/' + id)\n            .pipe(map(data => data));\n    }\n\n    /**\n    * FilmMakerService.get\n    *   @description CRUD ACTION get\n    *\n    */\n    get(id: string): Observable<FilmMaker> {\n        return this.http\n            .get<FilmMaker>(this.contextUrl + '/' + id)\n            .pipe(map(data => data));\n    }\n\n    /**\n    * FilmMakerService.list\n    *   @description CRUD ACTION list\n    *\n    */\n    list(): Observable<FilmMaker[]> {\n        return this.http\n            .get<FilmMaker[]>(this.contextUrl)\n            .pipe(map(data => data));\n    }\n\n    /**\n    * FilmMakerService.update\n    *   @description CRUD ACTION update\n    *\n    */\n    update(item: FilmMaker): Observable<FilmMaker> {\n        return this.http\n            .post<FilmMaker>(this.contextUrl + '/' + item._id, item)\n            .pipe(map(data => data));\n    }\n\n\n    // Custom APIs\n\n}\n","/**\n *\n *\n  _____                      _              _ _ _     _   _     _        __ _ _\n |  __ \\                    | |            | (_) |   | | | |   (_)      / _(_) |\n | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___\n | |  | |/ _ \\  | '_ \\ / _ \\| __|  / _ \\/ _` | | __| | __| '_ \\| / __| |  _| | |/ _ \\\n | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \\__ \\ | | | | |  __/\n |_____/ \\___/  |_| |_|\\___/ \\__|  \\___|\\__,_|_|\\__|  \\__|_| |_|_|___/ |_| |_|_|\\___|\n\n * DO NOT EDIT THIS FILE!!\n *\n *  FOR CUSTOMIZE filmBaseService PLEASE EDIT ../film.service.ts\n *\n *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER'S CODE GENERATION --\n *\n */\n // DEPENDENCIES\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\n\n// CONFIG\nimport { environment } from '../../../environments/environment';\n\n// MODEL\nimport { Film } from '../../domain/manage_film_example_db/film';\n\n/**\n * THIS SERVICE MAKE HTTP REQUEST TO SERVER, FOR CUSTOMIZE IT EDIT ../Film.service.ts\n */\n\n/*\n * SCHEMA DB Film\n *\n\t{\n\t\tgenre: {\n\t\t\ttype: 'String',\n\t\t\tenum : [\"Action\",\"Crime\",\"Fantasy\",\"Horror\"]\n\t\t},\n\t\ttitle: {\n\t\t\ttype: 'String',\n\t\t\trequired : true\n\t\t},\n\t\tyear: {\n\t\t\ttype: 'Number'\n\t\t},\n\t\t//RELATIONS\n\t\t//EXTERNAL RELATIONS\n\t\tcast: [{\n\t\t\ttype: Schema.ObjectId,\n\t\t\tref : \"Film\"\n\t\t}],\n\t\tfilmMaker: {\n\t\t\ttype: Schema.ObjectId,\n\t\t\trequired : true,\n\t\t\tref : \"Film\"\n\t\t},\n\t}\n *\n */\n@Injectable()\nexport class FilmBaseService {\n\n    contextUrl: string = environment.endpoint + '/films';\n    constructor(\n        protected http: HttpClient\n        ) { }\n\n    // CRUD METHODS\n\n    /**\n    * FilmService.create\n    *   @description CRUD ACTION create\n    *\n    */\n    create(item: Film): Observable<Film> {\n        return this.http\n            .post<Film>(this.contextUrl, item)\n            .pipe(map(data => data));\n    }\n\n    /**\n    * FilmService.delete\n    *   @description CRUD ACTION delete\n    *\n    */\n    remove(id: string): Observable<void> {\n        return this.http\n            .delete<void>(this.contextUrl + '/' + id)\n            .pipe(map(data => data));\n    }\n\n    /**\n    * FilmService.findBycast\n    *   @description CRUD ACTION findBycast\n    *\n    */\n    findByCast(id: string): Observable<Film[]> {\n        return this.http\n            .get<Film[]>(this.contextUrl + '/findByCast/' + id)\n            .pipe(\n                map(response => response)\n            );\n    }\n\n    /**\n    * FilmService.findByfilmMaker\n    *   @description CRUD ACTION findByfilmMaker\n    *\n    */\n    findByFilmMaker(id: string): Observable<Film[]> {\n        return this.http\n            .get<Film[]>(this.contextUrl + '/findByFilmMaker/' + id)\n            .pipe(\n                map(response => response)\n            );\n    }\n\n    /**\n    * FilmService.get\n    *   @description CRUD ACTION get\n    *\n    */\n    get(id: string): Observable<Film> {\n        return this.http\n            .get<Film>(this.contextUrl + '/' + id)\n            .pipe(map(data => data));\n    }\n\n    /**\n    * FilmService.list\n    *   @description CRUD ACTION list\n    *\n    */\n    list(): Observable<Film[]> {\n        return this.http\n            .get<Film[]>(this.contextUrl)\n            .pipe(map(data => data));\n    }\n\n    /**\n    * FilmService.update\n    *   @description CRUD ACTION update\n    *\n    */\n    update(item: Film): Observable<Film> {\n        return this.http\n            .post<Film>(this.contextUrl + '/' + item._id, item)\n            .pipe(map(data => data));\n    }\n\n\n    // Custom APIs\n\n}\n","/**\n *\n *\n  _____                      _              _ _ _     _   _     _        __ _ _\n |  __ \\                    | |            | (_) |   | | | |   (_)      / _(_) |\n | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___\n | |  | |/ _ \\  | '_ \\ / _ \\| __|  / _ \\/ _` | | __| | __| '_ \\| / __| |  _| | |/ _ \\\n | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \\__ \\ | | | | |  __/\n |_____/ \\___/  |_| |_|\\___/ \\__|  \\___|\\__,_|_|\\__|  \\__|_| |_|_|___/ |_| |_|_|\\___|\n\n * DO NOT EDIT THIS FILE!!\n *\n *  FOR CUSTOMIZE userBaseService PLEASE EDIT ../user.service.ts\n *\n *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER'S CODE GENERATION --\n *\n */\n // DEPENDENCIES\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\n\n// CONFIG\nimport { environment } from '../../../environments/environment';\n\n// MODEL\nimport { User } from '../../domain/manage_film_example_db/user';\n\n/**\n * THIS SERVICE MAKE HTTP REQUEST TO SERVER, FOR CUSTOMIZE IT EDIT ../User.service.ts\n */\n\n/*\n * SCHEMA DB User\n *\n\t{\n\t\tmail: {\n\t\t\ttype: 'String'\n\t\t},\n\t\tname: {\n\t\t\ttype: 'String'\n\t\t},\n\t\tpassword: {\n\t\t\ttype: 'String',\n\t\t\trequired : true\n\t\t},\n\t\troles: {\n\t\t\ttype: 'String'\n\t\t},\n\t\tsurname: {\n\t\t\ttype: 'String'\n\t\t},\n\t\tusername: {\n\t\t\ttype: 'String',\n\t\t\trequired : true\n\t\t},\n\t\t//RELATIONS\n\t\t//EXTERNAL RELATIONS\n\t}\n *\n */\n@Injectable()\nexport class UserBaseService {\n\n    contextUrl: string = environment.endpoint + '/Users';\n    constructor(\n        protected http: HttpClient\n        ) { }\n\n    // CRUD METHODS\n\n    /**\n    * UserService.create\n    *   @description CRUD ACTION create\n    *\n    */\n    create(item: User): Observable<User> {\n        return this.http\n            .post<User>(this.contextUrl, item)\n            .pipe(map(data => data));\n    }\n\n    /**\n    * UserService.delete\n    *   @description CRUD ACTION delete\n    *   @param ObjectId id Id\n    *\n    */\n    remove(id: string): Observable<void> {\n        return this.http\n            .delete<void>(this.contextUrl + '/' + id)\n            .pipe(map(data => data));\n    }\n\n    /**\n    * UserService.get\n    *   @description CRUD ACTION get\n    *   @param ObjectId id Id \n    *\n    */\n    get(id: string): Observable<User> {\n        return this.http\n            .get<User>(this.contextUrl + '/' + id)\n            .pipe(map(data => data));\n    }\n\n    /**\n    * UserService.list\n    *   @description CRUD ACTION list\n    *\n    */\n    list(): Observable<User[]> {\n        return this.http\n            .get<User[]>(this.contextUrl)\n            .pipe(map(data => data));\n    }\n\n    /**\n    * UserService.update\n    *   @description CRUD ACTION update\n    *   @param ObjectId id Id\n    *\n    */\n    update(item: User): Observable<User> {\n        return this.http\n            .post<User>(this.contextUrl + '/' + item._id, item)\n            .pipe(map(data => data));\n    }\n\n\n    // Custom APIs\n\n\n    /**\n    * UserService.changePassword\n    *   @description Change password of user from admin\n    *   @returns object\n    *\n    */\n    changePassword(...params: any[]): Observable<any> {\n        return this.http\n            .post<any>(this.contextUrl + '/{id}/changePassword', {})\n            .pipe(\n                map(response => response)\n            );\n    }\n\n}\n","// BASE SERVICE\nimport { FilmMakerBaseService } from './base/film-maker.base.service';\n\n\n// start documentation\n/**\n * Custom APIs\n *\n */\n// end documentation\n\n/**\n * YOU CAN OVERRIDE HERE FilmMakerBaseService\n */\nexport class FilmMakerService extends FilmMakerBaseService {\n\n}\n","// BASE SERVICE\nimport { FilmBaseService } from './base/film.base.service';\n\n\n// start documentation\n/**\n * Custom APIs\n *\n */\n// end documentation\n\n/**\n * YOU CAN OVERRIDE HERE FilmBaseService\n */\nexport class FilmService extends FilmBaseService {\n\n}\n","// DEPENDENCIES\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n// BASE SERVICE\nimport { UserBaseService } from './base/user.base.service';\n\n\n// start documentation\n/**\n * Custom APIs\n *\n * Service.changePassword\n *\t@description Change password of user from admin\n *\t@returns object\n *\n */\n// end documentation\n\n/**\n * YOU CAN OVERRIDE HERE UserBaseService\n */\n@Injectable()\nexport class UserService extends UserBaseService {\n\n    // CONSTRUCTOR\n    constructor(\n        http: HttpClient,\n    ) {\n        super(http);\n    }\n\n    /*\n    Name: changePassword\n    Description: Change password of user from admin\n    Params:\n        id: id of user\n        passwordNew: new password in MD5\n        passwordAdmin: admin password in MD5\n    */\n    changePassword(id: String, passwordNew: string, passwordAdmin: string): Observable<void> {\n        return this.http\n            .post<void>(this.contextUrl + '/' + id + '/changePassword', {\n                passwordNew: passwordNew,\n                passwordAdmin: passwordAdmin\n            })\n            .pipe(\n                map(response => response)\n            );\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  endpoint: 'http://localhost:3000/api'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}